module core.List.List as ll
module common.uniontensor as ut
module gen.params as dataparams
module common.layerparams as lparams
module common.params as params
module conv2d.conv2d as CYDT
module relu.relu as XUHU
module pad.pad as IHPK
module pool2d.pool2d as RBYJ
module reshape.reshape as UNPP
module concat.concat as WMKK
!{
let _ = ${print("LAYER DELIMITER 0")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 3, 24, (5, 5, ), (2, 2, ), (1, 2, 1, 2, ), (1, 1, ), 1, 1, "zeros", true, )  ); ],
	[[ut.EMPTY; dataparams.conv2d_kernel_dequantize; dataparams.conv2d_bias_dequantize; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 128; 128; 3; ]; [3; 5; 5; 24; ]; [24; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 64; 64; 24; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 1")
 0} 
 let _ = XUHU.relu</params.Attributes("relu_mangled", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", true, false),
	[params.Relu(lparams.Relu("tflite", )  ); ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 64; 64; 24; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 64; 64; 24; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 2")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_MWGZLXEAQQ", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 24, 24, (3, 3, ), (1, 1, ), (1, 1, 1, 1, ), (1, 1, ), 24, 1, "zeros", false, )  ); ],
	[[ut.EMPTY; dataparams.depthwise_conv2d_kernel_dequantize; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 64; 64; 24; ]; [1; 3; 3; 24; ]; []; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 64; 64; 24; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 3")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_WUXAVBBFGO", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 24, 24, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); params.Add(lparams.Add("tflite", )  ); params.Relu(lparams.Relu("tflite", )  ); ],
	[[ut.EMPTY; dataparams.conv2d_1_kernel_dequantize; dataparams.conv2d_1_bias_dequantize; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; [rtType(f32); rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 64; 64; 24; ]; [24; 1; 1; 24; ]; [24; ]; ]; [[1; 64; 64; 24; ]; [1; 64; 64; 24; ]; ]; [[1; 64; 64; 24; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 64; 64; 24; ]; ]; [[1; 64; 64; 24; ]; ]; [[1; 64; 64; 24; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; [(-1, 1, ); (0, 0, ); ]; [(1, 0, ); ]; ],
	[[(1, 1, ); ]; [(2, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; false; ],
	rtType(tuple<tensor<f32,4>,tensor<f32,4>>),
	[rtType(tensor<f32,4>); rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 4")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_PLAZVYXUPN", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 24, 24, (3, 3, ), (1, 1, ), (1, 1, 1, 1, ), (1, 1, ), 24, 1, "zeros", false, )  ); ],
	[[ut.EMPTY; dataparams.depthwise_conv2d_1_kernel_dequantize; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 64; 64; 24; ]; [1; 3; 3; 24; ]; []; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 64; 64; 24; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 5")
 0} 
 let _ = IHPK.pad</params.Attributes("pad_mangled", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Pad(lparams.Pad("tflite", [[0; 0; ]; [0; 0; ]; [0; 0; ]; [0; 4; ]; ], 0.0, )  ); ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 64; 64; 24; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 64; 64; 28; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 6")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_RUKWFMQPUN", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 24, 28, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); params.Add(lparams.Add("tflite", )  ); params.Relu(lparams.Relu("tflite", )  ); ],
	[[ut.EMPTY; dataparams.conv2d_2_kernel_dequantize; dataparams.conv2d_2_bias_dequantize; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; [rtType(f32); rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 64; 64; 24; ]; [24; 1; 1; 28; ]; [28; ]; ]; [[1; 64; 64; 28; ]; [1; 64; 64; 28; ]; ]; [[1; 64; 64; 28; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 64; 64; 28; ]; ]; [[1; 64; 64; 28; ]; ]; [[1; 64; 64; 28; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; [(-1, 1, ); (0, 0, ); ]; [(1, 0, ); ]; ],
	[[(1, 1, ); ]; [(2, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; false; ],
	rtType(tuple<tensor<f32,4>,tensor<f32,4>>),
	[rtType(tensor<f32,4>); rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 7")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_HYWCIRLYGJ", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 28, 28, (3, 3, ), (2, 2, ), (0, 1, 0, 1, ), (1, 1, ), 28, 1, "zeros", false, )  ); ],
	[[ut.EMPTY; dataparams.depthwise_conv2d_2_kernel_dequantize; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 64; 64; 28; ]; [1; 3; 3; 28; ]; []; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 32; 32; 28; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 8")
 0} 
 let _ = RBYJ.pool2d</params.Attributes("pool2d_mangled", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Pool2d(lparams.Pool2d("tflite", "maxpool2d", (2, 2, ), (2, 2, ), (0, 0, 0, 0, ), (1, 1, ), false, )  ); params.Pad(lparams.Pad("tflite", [[0; 0; ]; [0; 0; ]; [0; 0; ]; [0; 4; ]; ], 0.0, )  ); ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 64; 64; 28; ]; ]; [[1; 32; 32; 28; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 32; 32; 28; ]; ]; [[1; 32; 32; 32; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); ]; [(0, 0, ); ]; ],
	[[(1, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 9")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_FTPQBHEQCP", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 28, 32, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); params.Add(lparams.Add("tflite", )  ); params.Relu(lparams.Relu("tflite", )  ); ],
	[[ut.EMPTY; dataparams.conv2d_3_kernel_dequantize; dataparams.conv2d_3_bias_dequantize; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; [rtType(f32); rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 32; 32; 28; ]; [28; 1; 1; 32; ]; [32; ]; ]; [[1; 32; 32; 32; ]; [1; 32; 32; 32; ]; ]; [[1; 32; 32; 32; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 32; 32; 32; ]; ]; [[1; 32; 32; 32; ]; ]; [[1; 32; 32; 32; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; [(-1, 1, ); (0, 0, ); ]; [(1, 0, ); ]; ],
	[[(1, 1, ); ]; [(2, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; false; ],
	rtType(tuple<tensor<f32,4>,tensor<f32,4>>),
	[rtType(tensor<f32,4>); rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 10")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_ZROLFYWXKN", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 32, 32, (3, 3, ), (1, 1, ), (1, 1, 1, 1, ), (1, 1, ), 32, 1, "zeros", false, )  ); ],
	[[ut.EMPTY; dataparams.depthwise_conv2d_3_kernel_dequantize; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 32; 32; 32; ]; [1; 3; 3; 32; ]; []; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 32; 32; 32; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 11")
 0} 
 let _ = IHPK.pad</params.Attributes("pad_mangled_ZFKWHCUACJ", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Pad(lparams.Pad("tflite", [[0; 0; ]; [0; 0; ]; [0; 0; ]; [0; 4; ]; ], 0.0, )  ); ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 32; 32; 32; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 32; 32; 36; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 12")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_ZRJASAMFCD", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 32, 36, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); params.Add(lparams.Add("tflite", )  ); params.Relu(lparams.Relu("tflite", )  ); ],
	[[ut.EMPTY; dataparams.conv2d_4_kernel_dequantize; dataparams.conv2d_4_bias_dequantize; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; [rtType(f32); rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 32; 32; 32; ]; [32; 1; 1; 36; ]; [36; ]; ]; [[1; 32; 32; 36; ]; [1; 32; 32; 36; ]; ]; [[1; 32; 32; 36; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 32; 32; 36; ]; ]; [[1; 32; 32; 36; ]; ]; [[1; 32; 32; 36; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; [(-1, 1, ); (0, 0, ); ]; [(1, 0, ); ]; ],
	[[(1, 1, ); ]; [(2, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; false; ],
	rtType(tuple<tensor<f32,4>,tensor<f32,4>>),
	[rtType(tensor<f32,4>); rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 13")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_ZLWAUELLKS", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 36, 36, (3, 3, ), (1, 1, ), (1, 1, 1, 1, ), (1, 1, ), 36, 1, "zeros", false, )  ); ],
	[[ut.EMPTY; dataparams.depthwise_conv2d_4_kernel_dequantize; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 32; 32; 36; ]; [1; 3; 3; 36; ]; []; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 32; 32; 36; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 14")
 0} 
 let _ = IHPK.pad</params.Attributes("pad_mangled_SLELCNHPZO", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Pad(lparams.Pad("tflite", [[0; 0; ]; [0; 0; ]; [0; 0; ]; [0; 6; ]; ], 0.0, )  ); ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 32; 32; 36; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 32; 32; 42; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 15")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_KNMQXVHNPX", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 36, 42, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); params.Add(lparams.Add("tflite", )  ); params.Relu(lparams.Relu("tflite", )  ); ],
	[[ut.EMPTY; dataparams.conv2d_5_kernel_dequantize; dataparams.conv2d_5_bias_dequantize; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; [rtType(f32); rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 32; 32; 36; ]; [36; 1; 1; 42; ]; [42; ]; ]; [[1; 32; 32; 42; ]; [1; 32; 32; 42; ]; ]; [[1; 32; 32; 42; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 32; 32; 42; ]; ]; [[1; 32; 32; 42; ]; ]; [[1; 32; 32; 42; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; [(-1, 1, ); (0, 0, ); ]; [(1, 0, ); ]; ],
	[[(1, 1, ); ]; [(2, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; false; ],
	rtType(tuple<tensor<f32,4>,tensor<f32,4>>),
	[rtType(tensor<f32,4>); rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 16")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_MYPZRYPKZT", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 42, 42, (3, 3, ), (2, 2, ), (0, 1, 0, 1, ), (1, 1, ), 42, 1, "zeros", false, )  ); ],
	[[ut.EMPTY; dataparams.depthwise_conv2d_5_kernel_dequantize; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 32; 32; 42; ]; [1; 3; 3; 42; ]; []; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 42; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 17")
 0} 
 let _ = RBYJ.pool2d</params.Attributes("pool2d_mangled_LLYWPZSFWX", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Pool2d(lparams.Pool2d("tflite", "maxpool2d", (2, 2, ), (2, 2, ), (0, 0, 0, 0, ), (1, 1, ), false, )  ); params.Pad(lparams.Pad("tflite", [[0; 0; ]; [0; 0; ]; [0; 0; ]; [0; 6; ]; ], 0.0, )  ); ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 32; 32; 42; ]; ]; [[1; 16; 16; 42; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 16; 16; 42; ]; ]; [[1; 16; 16; 48; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); ]; [(0, 0, ); ]; ],
	[[(1, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 18")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_NKDNSQVYHR", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 42, 48, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); params.Add(lparams.Add("tflite", )  ); params.Relu(lparams.Relu("tflite", )  ); ],
	[[ut.EMPTY; dataparams.conv2d_6_kernel_dequantize; dataparams.conv2d_6_bias_dequantize; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; [rtType(f32); rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 16; 16; 42; ]; [42; 1; 1; 48; ]; [48; ]; ]; [[1; 16; 16; 48; ]; [1; 16; 16; 48; ]; ]; [[1; 16; 16; 48; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 16; 16; 48; ]; ]; [[1; 16; 16; 48; ]; ]; [[1; 16; 16; 48; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; [(-1, 1, ); (0, 0, ); ]; [(1, 0, ); ]; ],
	[[(1, 1, ); ]; [(2, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; false; ],
	rtType(tuple<tensor<f32,4>,tensor<f32,4>>),
	[rtType(tensor<f32,4>); rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 19")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_QVAJQRXTLO", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 48, 48, (3, 3, ), (1, 1, ), (1, 1, 1, 1, ), (1, 1, ), 48, 1, "zeros", false, )  ); ],
	[[ut.EMPTY; dataparams.depthwise_conv2d_6_kernel_dequantize; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 16; 16; 48; ]; [1; 3; 3; 48; ]; []; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 48; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 20")
 0} 
 let _ = IHPK.pad</params.Attributes("pad_mangled_NJJQLGNLRB", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Pad(lparams.Pad("tflite", [[0; 0; ]; [0; 0; ]; [0; 0; ]; [0; 8; ]; ], 0.0, )  ); ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 48; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 56; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 21")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_OOWBSICIOF", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 48, 56, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); params.Add(lparams.Add("tflite", )  ); params.Relu(lparams.Relu("tflite", )  ); ],
	[[ut.EMPTY; dataparams.conv2d_7_kernel_dequantize; dataparams.conv2d_7_bias_dequantize; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; [rtType(f32); rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 16; 16; 48; ]; [48; 1; 1; 56; ]; [56; ]; ]; [[1; 16; 16; 56; ]; [1; 16; 16; 56; ]; ]; [[1; 16; 16; 56; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 16; 16; 56; ]; ]; [[1; 16; 16; 56; ]; ]; [[1; 16; 16; 56; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; [(-1, 1, ); (0, 0, ); ]; [(1, 0, ); ]; ],
	[[(1, 1, ); ]; [(2, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; false; ],
	rtType(tuple<tensor<f32,4>,tensor<f32,4>>),
	[rtType(tensor<f32,4>); rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 22")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_DGERDBOVLE", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 56, 56, (3, 3, ), (1, 1, ), (1, 1, 1, 1, ), (1, 1, ), 56, 1, "zeros", false, )  ); ],
	[[ut.EMPTY; dataparams.depthwise_conv2d_7_kernel_dequantize; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 16; 16; 56; ]; [1; 3; 3; 56; ]; []; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 56; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 23")
 0} 
 let _ = IHPK.pad</params.Attributes("pad_mangled_GQWCRJYNMR", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Pad(lparams.Pad("tflite", [[0; 0; ]; [0; 0; ]; [0; 0; ]; [0; 8; ]; ], 0.0, )  ); ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 56; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 64; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 24")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_KYPIQFEQHA", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 56, 64, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); params.Add(lparams.Add("tflite", )  ); params.Relu(lparams.Relu("tflite", )  ); ],
	[[ut.EMPTY; dataparams.conv2d_8_kernel_dequantize; dataparams.conv2d_8_bias_dequantize; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; [rtType(f32); rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 16; 16; 56; ]; [56; 1; 1; 64; ]; [64; ]; ]; [[1; 16; 16; 64; ]; [1; 16; 16; 64; ]; ]; [[1; 16; 16; 64; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 16; 16; 64; ]; ]; [[1; 16; 16; 64; ]; ]; [[1; 16; 16; 64; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; [(-1, 1, ); (0, 0, ); ]; [(1, 0, ); ]; ],
	[[(1, 1, ); ]; [(2, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; false; ],
	rtType(tuple<tensor<f32,4>,tensor<f32,4>>),
	[rtType(tensor<f32,4>); rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 25")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_KSAYQOGHIL", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 64, 64, (3, 3, ), (1, 1, ), (1, 1, 1, 1, ), (1, 1, ), 64, 1, "zeros", false, )  ); ],
	[[ut.EMPTY; dataparams.depthwise_conv2d_8_kernel_dequantize; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 16; 16; 64; ]; [1; 3; 3; 64; ]; []; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 64; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 26")
 0} 
 let _ = IHPK.pad</params.Attributes("pad_mangled_UOYFOLPJCR", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Pad(lparams.Pad("tflite", [[0; 0; ]; [0; 0; ]; [0; 0; ]; [0; 8; ]; ], 0.0, )  ); ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 64; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 72; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 27")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_OTJMPRJWGJ", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 64, 72, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); params.Add(lparams.Add("tflite", )  ); params.Relu(lparams.Relu("tflite", )  ); ],
	[[ut.EMPTY; dataparams.conv2d_9_kernel_dequantize; dataparams.conv2d_9_bias_dequantize; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; [rtType(f32); rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 16; 16; 64; ]; [64; 1; 1; 72; ]; [72; ]; ]; [[1; 16; 16; 72; ]; [1; 16; 16; 72; ]; ]; [[1; 16; 16; 72; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 16; 16; 72; ]; ]; [[1; 16; 16; 72; ]; ]; [[1; 16; 16; 72; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; [(-1, 1, ); (0, 0, ); ]; [(1, 0, ); ]; ],
	[[(1, 1, ); ]; [(2, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; false; ],
	rtType(tuple<tensor<f32,4>,tensor<f32,4>>),
	[rtType(tensor<f32,4>); rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 28")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_LUYLTHZCBI", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 72, 72, (3, 3, ), (1, 1, ), (1, 1, 1, 1, ), (1, 1, ), 72, 1, "zeros", false, )  ); ],
	[[ut.EMPTY; dataparams.depthwise_conv2d_9_kernel_dequantize; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 16; 16; 72; ]; [1; 3; 3; 72; ]; []; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 72; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 29")
 0} 
 let _ = IHPK.pad</params.Attributes("pad_mangled_TROKVMLVLD", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Pad(lparams.Pad("tflite", [[0; 0; ]; [0; 0; ]; [0; 0; ]; [0; 8; ]; ], 0.0, )  ); ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 72; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 80; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 30")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_JIGPMEGDOV", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 72, 80, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); params.Add(lparams.Add("tflite", )  ); params.Relu(lparams.Relu("tflite", )  ); ],
	[[ut.EMPTY; dataparams.conv2d_10_kernel_dequantize; dataparams.conv2d_10_bias_dequantize; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; [rtType(f32); rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 16; 16; 72; ]; [72; 1; 1; 80; ]; [80; ]; ]; [[1; 16; 16; 80; ]; [1; 16; 16; 80; ]; ]; [[1; 16; 16; 80; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 16; 16; 80; ]; ]; [[1; 16; 16; 80; ]; ]; [[1; 16; 16; 80; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; [(-1, 1, ); (0, 0, ); ]; [(1, 0, ); ]; ],
	[[(1, 1, ); ]; [(2, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; false; ],
	rtType(tuple<tensor<f32,4>,tensor<f32,4>>),
	[rtType(tensor<f32,4>); rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 31")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_PIEWVTOTBJ", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 80, 80, (3, 3, ), (1, 1, ), (1, 1, 1, 1, ), (1, 1, ), 80, 1, "zeros", false, )  ); ],
	[[ut.EMPTY; dataparams.depthwise_conv2d_10_kernel_dequantize; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 16; 16; 80; ]; [1; 3; 3; 80; ]; []; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 80; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 32")
 0} 
 let _ = IHPK.pad</params.Attributes("pad_mangled_RAZPZRMHPD", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Pad(lparams.Pad("tflite", [[0; 0; ]; [0; 0; ]; [0; 0; ]; [0; 8; ]; ], 0.0, )  ); ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 80; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 88; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 33")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_MCTDETGMRZ", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 80, 88, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); params.Add(lparams.Add("tflite", )  ); params.Relu(lparams.Relu("tflite", )  ); ],
	[[ut.EMPTY; dataparams.conv2d_11_kernel_dequantize; dataparams.conv2d_11_bias_dequantize; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; [rtType(f32); rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 16; 16; 80; ]; [80; 1; 1; 88; ]; [88; ]; ]; [[1; 16; 16; 88; ]; [1; 16; 16; 88; ]; ]; [[1; 16; 16; 88; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 16; 16; 88; ]; ]; [[1; 16; 16; 88; ]; ]; [[1; 16; 16; 88; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; [(-1, 1, ); (0, 0, ); ]; [(1, 0, ); ]; ],
	[[(1, 1, ); ]; [(2, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; false; ],
	rtType(tuple<tensor<f32,4>,tensor<f32,4>>),
	[rtType(tensor<f32,4>); rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 34")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_EJFVROMGWR", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 88, 88, (3, 3, ), (2, 2, ), (0, 1, 0, 1, ), (1, 1, ), 88, 1, "zeros", false, )  ); ],
	[[ut.EMPTY; dataparams.depthwise_conv2d_11_kernel_dequantize; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 16; 16; 88; ]; [1; 3; 3; 88; ]; []; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 8; 8; 88; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 35")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_WUDNSTXMUD", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 88, 2, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); ],
	[[ut.EMPTY; dataparams.classificator_8_kernel_dequantize; dataparams.classificator_8_bias_dequantize; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 16; 16; 88; ]; [88; 1; 1; 2; ]; [2; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 2; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 36")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_QLHCNWBJXG", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 88, 32, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); ],
	[[ut.EMPTY; dataparams.regressor_8_kernel_dequantize; dataparams.regressor_8_bias_dequantize; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 16; 16; 88; ]; [88; 1; 1; 32; ]; [32; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 32; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 37")
 0} 
 let _ = RBYJ.pool2d</params.Attributes("pool2d_mangled_QWICILLFXI", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Pool2d(lparams.Pool2d("tflite", "maxpool2d", (2, 2, ), (2, 2, ), (0, 0, 0, 0, ), (1, 1, ), false, )  ); params.Pad(lparams.Pad("tflite", [[0; 0; ]; [0; 0; ]; [0; 0; ]; [0; 8; ]; ], 0.0, )  ); ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 16; 16; 88; ]; ]; [[1; 8; 8; 88; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 8; 8; 88; ]; ]; [[1; 8; 8; 96; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); ]; [(0, 0, ); ]; ],
	[[(1, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 38")
 0} 
 let _ = UNPP.reshape</params.Attributes("reshape_mangled", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", true, false),
	[params.Reshape(lparams.Reshape("tflite", [1; 512; 1; ], )  ); ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 2; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 512; 1; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,3>>),
	[rtType(tensor<f32,3>); ]/>() 
let _ = ${print("LAYER DELIMITER 39")
 0} 
 let _ = UNPP.reshape</params.Attributes("reshape_mangled_MWNVEBMAWY", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", true, false),
	[params.Reshape(lparams.Reshape("tflite", [1; 512; 16; ], )  ); ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 16; 16; 32; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 512; 16; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,3>>),
	[rtType(tensor<f32,3>); ]/>() 
let _ = ${print("LAYER DELIMITER 40")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_AVCAZOYJPR", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 88, 96, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); params.Add(lparams.Add("tflite", )  ); params.Relu(lparams.Relu("tflite", )  ); ],
	[[ut.EMPTY; dataparams.conv2d_12_kernel_dequantize; dataparams.conv2d_12_bias_dequantize; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; [rtType(f32); rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 8; 8; 88; ]; [88; 1; 1; 96; ]; [96; ]; ]; [[1; 8; 8; 96; ]; [1; 8; 8; 96; ]; ]; [[1; 8; 8; 96; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; ]; [[1; 8; 8; 96; ]; ]; [[1; 8; 8; 96; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; [(-1, 1, ); (0, 0, ); ]; [(1, 0, ); ]; ],
	[[(1, 1, ); ]; [(2, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; false; ],
	rtType(tuple<tensor<f32,4>,tensor<f32,4>>),
	[rtType(tensor<f32,4>); rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 41")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_KIYTBNDMWE", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 96, 96, (3, 3, ), (1, 1, ), (1, 1, 1, 1, ), (1, 1, ), 96, 1, "zeros", false, )  ); ],
	[[ut.EMPTY; dataparams.depthwise_conv2d_12_kernel_dequantize; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; [1; 3; 3; 96; ]; []; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 42")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_ATTSJZHOVZ", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 96, 96, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); params.Add(lparams.Add("tflite", )  ); params.Relu(lparams.Relu("tflite", )  ); ],
	[[ut.EMPTY; dataparams.conv2d_13_kernel_dequantize; dataparams.conv2d_13_bias_dequantize; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; [rtType(f32); rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; [96; 1; 1; 96; ]; [96; ]; ]; [[1; 8; 8; 96; ]; [1; 8; 8; 96; ]; ]; [[1; 8; 8; 96; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; ]; [[1; 8; 8; 96; ]; ]; [[1; 8; 8; 96; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; [(-1, 1, ); (0, 0, ); ]; [(1, 0, ); ]; ],
	[[(1, 1, ); ]; [(2, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; false; ],
	rtType(tuple<tensor<f32,4>,tensor<f32,4>>),
	[rtType(tensor<f32,4>); rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 43")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_ZJOAREYKHE", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 96, 96, (3, 3, ), (1, 1, ), (1, 1, 1, 1, ), (1, 1, ), 96, 1, "zeros", false, )  ); ],
	[[ut.EMPTY; dataparams.depthwise_conv2d_13_kernel_dequantize; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; [1; 3; 3; 96; ]; []; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 44")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_FSXZNABVZB", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 96, 96, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); params.Add(lparams.Add("tflite", )  ); params.Relu(lparams.Relu("tflite", )  ); ],
	[[ut.EMPTY; dataparams.conv2d_14_kernel_dequantize; dataparams.conv2d_14_bias_dequantize; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; [rtType(f32); rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; [96; 1; 1; 96; ]; [96; ]; ]; [[1; 8; 8; 96; ]; [1; 8; 8; 96; ]; ]; [[1; 8; 8; 96; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; ]; [[1; 8; 8; 96; ]; ]; [[1; 8; 8; 96; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; [(-1, 1, ); (0, 0, ); ]; [(1, 0, ); ]; ],
	[[(1, 1, ); ]; [(2, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; false; ],
	rtType(tuple<tensor<f32,4>,tensor<f32,4>>),
	[rtType(tensor<f32,4>); rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 45")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_AQXLNSLVAS", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 96, 96, (3, 3, ), (1, 1, ), (1, 1, 1, 1, ), (1, 1, ), 96, 1, "zeros", false, )  ); ],
	[[ut.EMPTY; dataparams.depthwise_conv2d_14_kernel_dequantize; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; [1; 3; 3; 96; ]; []; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 46")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_VMOOCWFDKF", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 96, 96, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); params.Add(lparams.Add("tflite", )  ); params.Relu(lparams.Relu("tflite", )  ); ],
	[[ut.EMPTY; dataparams.conv2d_15_kernel_dequantize; dataparams.conv2d_15_bias_dequantize; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; [rtType(f32); rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; [96; 1; 1; 96; ]; [96; ]; ]; [[1; 8; 8; 96; ]; [1; 8; 8; 96; ]; ]; [[1; 8; 8; 96; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; ]; [[1; 8; 8; 96; ]; ]; [[1; 8; 8; 96; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; [(-1, 1, ); (0, 0, ); ]; [(1, 0, ); ]; ],
	[[(1, 1, ); ]; [(2, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; false; ],
	rtType(tuple<tensor<f32,4>,tensor<f32,4>>),
	[rtType(tensor<f32,4>); rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 47")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_NGFQJQAACU", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 96, 96, (3, 3, ), (1, 1, ), (1, 1, 1, 1, ), (1, 1, ), 96, 1, "zeros", false, )  ); ],
	[[ut.EMPTY; dataparams.depthwise_conv2d_15_kernel_dequantize; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; [1; 3; 3; 96; ]; []; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 48")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_MELHKIDAIA", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 96, 96, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); params.Add(lparams.Add("tflite", )  ); params.Relu(lparams.Relu("tflite", )  ); ],
	[[ut.EMPTY; dataparams.conv2d_16_kernel_dequantize; dataparams.conv2d_16_bias_dequantize; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; [rtType(f32); rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; [96; 1; 1; 96; ]; [96; ]; ]; [[1; 8; 8; 96; ]; [1; 8; 8; 96; ]; ]; [[1; 8; 8; 96; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[rtType(f32); ]; [rtType(f32); ]; [rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; ]; [[1; 8; 8; 96; ]; ]; [[1; 8; 8; 96; ]; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; [ut.EMPTY; ]; [ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; [(-1, 1, ); (0, 0, ); ]; [(1, 0, ); ]; ],
	[[(1, 1, ); ]; [(2, 0, ); ]; [(-1, 0, ); ]; ],
	[true; false; false; ],
	rtType(tuple<tensor<f32,4>,tensor<f32,4>>),
	[rtType(tensor<f32,4>); rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 49")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_MBZCFTDREZ", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 96, 6, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); ],
	[[ut.EMPTY; dataparams.classificator_16_kernel_dequantize; dataparams.classificator_16_bias_dequantize; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; [96; 1; 1; 6; ]; [6; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 8; 8; 6; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 50")
 0} 
 let _ = CYDT.conv2d</params.Attributes("conv2d_mangled_JJKQIMZPMP", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Conv2d(lparams.Conv2d("tflite", 96, 96, (1, 1, ), (1, 1, ), (0, 0, 0, 0, ), (1, 1, ), 1, 1, "zeros", true, )  ); ],
	[[ut.EMPTY; dataparams.regressor_16_kernel_dequantize; dataparams.regressor_16_bias_dequantize; ]; ],
	[[rtType(f32); rtType(f32); rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; [96; 1; 1; 96; ]; [96; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); (-1, -1, ); (-1, -1, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ]/>() 
let _ = ${print("LAYER DELIMITER 51")
 0} 
 let _ = UNPP.reshape</params.Attributes("reshape_mangled_ZSEAOUFOEG", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", true, false),
	[params.Reshape(lparams.Reshape("tflite", [1; 384; 1; ], )  ); ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 8; 8; 6; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 384; 1; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,3>>),
	[rtType(tensor<f32,3>); ]/>() 
let _ = ${print("LAYER DELIMITER 52")
 0} 
 let _ = UNPP.reshape</params.Attributes("reshape_mangled_LOZELCRSIA", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", true, false),
	[params.Reshape(lparams.Reshape("tflite", [1; 384; 16; ], )  ); ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 8; 8; 96; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 384; 16; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[(-1, 0, ); ]; ],
	[[(-1, 0, ); ]; ],
	[true; ],
	rtType(tuple<tensor<f32,4>>),
	[rtType(tensor<f32,4>); ],
	rtType(tuple<tensor<f32,3>>),
	[rtType(tensor<f32,3>); ]/>() 
let _ = ${print("LAYER DELIMITER 53")
 0} 
 let _ = WMKK.concat</params.Attributes("concat_mangled", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Concat(lparams.Concat("tflite", 1, )  ); ],
	[[ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); ]; ],
	[[[1; 512; 1; ]; [1; 384; 1; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 896; 1; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[]; ],
	[[]; ],
	[true; ],
	rtType(tuple<tensor<f32,3>,tensor<f32,3>>),
	[rtType(tensor<f32,3>); rtType(tensor<f32,3>); ],
	rtType(tuple<tensor<f32,3>>),
	[rtType(tensor<f32,3>); ]/>() 
let _ = ${print("LAYER DELIMITER 54")
 0} 
 let _ = WMKK.concat</params.Attributes("concat_mangled_YZRLROSUAF", 1),
	params.Optimization([1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], [1; 1; 1; 1; 1; ], "None", false, false),
	[params.Concat(lparams.Concat("tflite", 1, )  ); ],
	[[ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); rtType(f32); ]; ],
	[[[1; 512; 16; ]; [1; 384; 16; ]; ]; ],
	[[ut.EMPTY; ut.EMPTY; ]; ],
	[[ut.EMPTY; ut.EMPTY; ]; ],
	[[rtType(f32); ]; ],
	[[[1; 896; 16; ]; ]; ],
	[[ut.EMPTY; ]; ],
	[[ut.EMPTY; ]; ],
	[[]; ],
	[[]; ],
	[true; ],
	rtType(tuple<tensor<f32,3>,tensor<f32,3>>),
	[rtType(tensor<f32,3>); rtType(tensor<f32,3>); ],
	rtType(tuple<tensor<f32,3>>),
	[rtType(tensor<f32,3>); ]/>() 
  }
